#!/bin/bash

# Move videos and corresponding thumbs into an archive directory.
# Calling format from pikrellcam or a at-commands script:
#    archive-video [day|video.mp4] yyyy-mm-dd $a $m $P $G
#
# Which pikrellcam expands into:
#    archive-video day       yyyy-mm-dd archive-dir media-dir FIFO LOG
# or
#    archive-video video.mp4 yyyy-mm-dd archive-dir media-dir FIFO LOG

# If $1 is the string "day", move all videos for the day yyyy-mm-dd into
#   the archive directory archive-dir/yyyy/mm/dd/videos and all thumbs for
#   the day into archive-dir/yyyy/mm/dd/thumbs.
# Otherwise, $1 should be a mp4 video and it and its corresponding thumb
#   are moved into the archive directory.

if [ -f "/etc/arch-release" ]; then
	WWW_GROUP=http
else
	WWW_GROUP=www-data
fi

DAY_FLAG=$1
VIDEO=$1
DATE=$2
ARCHIVE_DIR=$3
MEDIA_DIR=$4
FIFO=$5
LOG_FILE=$6

if [ "$DATE" == "yesterday" ]
then
	DATE=`date --date="yesterday" +'%F'`
elif [ "$DATE" == "today" ]
then
	DATE=`date --date="today" +'%F'`
fi

LEN=${#DATE}

if [[ "$LEN" -ne "10" ]]
then
	echo "  archive-video bad date string: $DATE" >> $LOG_FILE
	exit 1
fi

# From DATE arg: yyyy-mm-dd, DATE_PATH is: yyyy/mm/dd
YEAR=`expr substr $DATE 1 4`
MONTH=`expr substr $DATE 6 2`
DAY=`expr substr $DATE 9 2`

DATE_PATH=$YEAR/$MONTH/$DAY

ARCHIVE_VIDEOS_PATH=$ARCHIVE_DIR/$DATE_PATH/videos
ARCHIVE_THUMBS_PATH=$ARCHIVE_DIR/$DATE_PATH/thumbs


create_dir()
	{
	DIR=$1
	if [ ! -d $DIR ]
	then
		mkdir $DIR
		sudo chown :$WWW_GROUP $DIR
		sudo chmod 775  $DIR
	fi
	}

create_dir $ARCHIVE_DIR/$YEAR
create_dir $ARCHIVE_DIR/$YEAR/$MONTH
create_dir $ARCHIVE_DIR/$YEAR/$MONTH/$DAY

create_dir $ARCHIVE_VIDEOS_PATH
if [ ! -d $ARCHIVE_VIDEOS_PATH ]
then
	echo "  archive-video could not create archive directory: $ARCHIVE_VIDEOS_PATH" >> $LOG_FILE
	exit 1
fi

create_dir $ARCHIVE_THUMBS_PATH
if [ ! -d $ARCHIVE_THUMBS_PATH ]
then
	echo "  archive-video could not create archive directory: $ARCHIVE_THUMBS_PATH" >> $LOG_FILE
	exit 1
fi


if [ "$DAY_FLAG" == "day" ] || [ "$DAY_FLAG" == "day_loop" ]
then
	echo "  archive day $DATE to $ARCHIVE_DIR/$DATE_PATH" >> $LOG_FILE
	mv $MEDIA_DIR/videos/*${DATE}*.mp4 $ARCHIVE_VIDEOS_PATH
	mv $MEDIA_DIR/thumbs/*${DATE}*.th.jpg $ARCHIVE_THUMBS_PATH
	if [ "`echo $MEDIA_DIR/videos/*${DATE}*.csv`" != "$MEDIA_DIR/videos/*${DATE}*.csv" ]
	then
		echo "         .csv $DATE to $ARCHIVE_DIR/$DATE_PATH" >> $LOG_FILE
		mv $MEDIA_DIR/videos/*${DATE}*.csv $ARCHIVE_VIDEOS_PATH
	fi
else
	echo "  archive $VIDEO to $ARCHIVE_DIR/$DATE_PATH" >> $LOG_FILE
	mv $MEDIA_DIR/videos/$VIDEO $ARCHIVE_VIDEOS_PATH
	THUMB_JPEG=${VIDEO%.mp4}.th.jpg
	mv $MEDIA_DIR/thumbs/$THUMB_JPEG $ARCHIVE_THUMBS_PATH
	CSV=${VIDEO%.mp4}.csv
	if [ -f $MEDIA_DIR/videos/$CSV ]
	then
		echo "          $CSV to $ARCHIVE_DIR/$DATE_PATH" >> $LOG_FILE
		mv $MEDIA_DIR/videos/$CSV $ARCHIVE_VIDEOS_PATH
	fi
fi

# Cleanup in case no files were moved so archive page won't show dangling links
#
find $ARCHIVE_VIDEOS_PATH -maxdepth 0 -empty -exec rmdir $ARCHIVE_VIDEOS_PATH \;
find $ARCHIVE_THUMBS_PATH -maxdepth 0 -empty -exec rmdir $ARCHIVE_THUMBS_PATH \;

ARCHIVE_DATE_PATH=$ARCHIVE_DIR/$DATE_PATH
find $ARCHIVE_DATE_PATH -maxdepth 0 -empty -exec rmdir $ARCHIVE_DATE_PATH \;
